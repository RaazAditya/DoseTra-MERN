import React, { useEffect, useState } from "react";
import { Button } from "@/components/ui/button";
import {
Â  Table,
Â  TableHeader,
Â  TableBody,
Â  TableRow,
Â  TableCell,
} from "@/components/ui/table";
import { Edit, Trash, Plus, Search } from "lucide-react";
import { useNavigate } from "react-router-dom";
import { getMedicines, deleteMedicine } from "@/features/api/medicineApi";
import { motion } from "framer-motion";


const MedicineListPage = () => {
Â  const [medicines, setMedicines] = useState([]);
Â  const [search, setSearch] = useState("");
Â  const [filter, setFilter] = useState("");
Â  const [loading, setLoading] = useState(true);
Â  const [currentPage, setCurrentPage] = useState(1);
Â  const pageSize = 10;


Â  const navigate = useNavigate();


Â  const fetchMedicines = async () => {
Â  Â  try {
Â  Â  Â  setLoading(true);
Â  Â  Â  const data = await getMedicines();
Â  Â  Â  setMedicines(Array.isArray(data) ? data : []);
Â  Â  } catch (error) {
Â  Â  Â  alert("Failed to fetch medicines");
Â  Â  Â  setMedicines([]);
Â  Â  } finally {
Â  Â  Â  Â  setLoading(false);
Â  Â  }
Â  };


Â  useEffect(() => {
Â  Â  fetchMedicines();
Â  Â  setCurrentPage(1);
Â  }, []);


Â  const filteredMedicines = medicines.filter(
Â  Â  (m) =>
Â  Â  Â  (!search ||
Â  Â  Â  Â  m.name.toLowerCase().includes(search.toLowerCase()) ||
Â  Â  Â  Â  m.dosage.toLowerCase().includes(search.toLowerCase()) ||
Â  Â  Â  Â  m.form.toLowerCase().includes(search.toLowerCase())) &&
Â  Â  Â  (!filter || m.form === filter)
Â  );


Â  const totalPages = Math.ceil(filteredMedicines.length / pageSize);
Â  const paginatedMedicines = filteredMedicines.slice(
Â  Â  (currentPage - 1) * pageSize,
Â  Â  currentPage * pageSize
Â  );


Â  // Pagination component
Â  function Pagination() {
Â  Â  if (totalPages <= 1) return null;
Â  Â  return (
Â  Â  Â  <div className="flex gap-2">
Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  onClick={() => setCurrentPage((idx) => Math.max(idx - 1, 1))}
Â  Â  Â  Â  Â  disabled={currentPage === 1}
Â  Â  Â  Â  Â  className="px-3 py-1 border rounded hover:bg-gray-200 disabled:opacity-50"
Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Prev
Â  Â  Â  Â  </button>


Â  Â  Â  Â  {Array.from({ length: totalPages }, (_, idx) => (
Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  key={idx + 1}
Â  Â  Â  Â  Â  Â  className={`px-3 py-1 rounded Â ${
Â  Â  Â  Â  Â  Â  Â  currentPage === idx + 1
Â  Â  Â  Â  Â  Â  Â  Â  ? "bg-indigo-600 text-white font-semibold"
Â  Â  Â  Â  Â  Â  Â  Â  : "bg-gray-200 text-gray-600"
Â  Â  Â  Â  Â  Â  }`}
Â  Â  Â  Â  Â  Â  onClick={() => setCurrentPage(idx + 1)}
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  {idx + 1}
Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  ))}
Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  onClick={() => setCurrentPage((idx) => Math.min(idx + 1, totalPages))}
Â  Â  Â  Â  Â  disabled={currentPage === totalPages}
Â  Â  Â  Â  Â  className="px-3 py-1 border rounded hover:bg-gray-200 disabled:opacity-50"
Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Next
Â  Â  Â  Â  </button>
Â  Â  Â  </div>
Â  Â  );
Â  }


Â  // Delete Handler
Â  const handleDelete = async (_id) => {
Â  Â  if (window.confirm("Are you sure you want to delete this medicine?")) {
Â  Â  Â  try {
Â  Â  Â  Â  await deleteMedicine(_id);
Â  Â  Â  Â  fetchMedicines();
Â  Â  Â  } catch (err) {
Â  Â  Â  Â  alert("Failed to delete medicine");
Â  Â  Â  }
Â  Â  }
Â  };


Â  return (
Â  Â  <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-50 py-6 px-4 sm:px-6">
Â  Â  Â  <div className="min-h-[calc(100vh-120px)] flex flex-col max-w-6xl mx-auto">
Â  Â  Â  Â  {/* Header & Search */}
Â  Â  Â  Â  <motion.div
Â  Â  Â  Â  Â  initial={{ opacity: 0, y: -20 }}
Â  Â  Â  Â  Â  animate={{ opacity: 1, y: 0 }}
Â  Â  Â  Â  Â  className="flex flex-col md:flex-row justify-between items-start md:items-center mb-6 gap-4"
Â  Â  Â  Â  >
Â  Â  Â  Â  Â  <div className="flex items-center gap-2 mb-2 md:mb-0">
Â  Â  Â  Â  Â  Â  <h1 className="text-2xl sm:text-3xl font-bold text-gray-800">
Â  Â  Â  Â  Â  Â  Â  Your Medicines
Â  Â  Â  Â  Â  Â  </h1>
Â  Â  Â  Â  Â  Â  <span className="bg-indigo-100 text-indigo-700 px-3 py-1 rounded-full text-sm font-medium">
Â  Â  Â  Â  Â  Â  Â  {medicines.length} total
Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  <div className="flex gap-2 items-center">
Â  Â  Â  Â  Â  Â  <div className="relative">
Â  Â  Â  Â  Â  Â  Â  <Search className="absolute left-3 top-2.5 w-4 h-4 text-gray-400" />
Â  Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  Â  type="text"
Â  Â  Â  Â  Â  Â  Â  Â  value={search}
Â  Â  Â  Â  Â  Â  Â  Â  onChange={(e) => setSearch(e.target.value)}
Â  Â  Â  Â  Â  Â  Â  Â  placeholder="Search medicines"
Â  Â  Â  Â  Â  Â  Â  Â  className="pl-9 pr-4 py-2 border border-gray-200 rounded-lg focus:outline-none focus:border-indigo-400 bg-white text-gray-800 transition text-sm"
Â  Â  Â  Â  Â  Â  Â  Â  aria-label="Search medicines"
Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  <select
Â  Â  Â  Â  Â  Â  Â  value={filter}
Â  Â  Â  Â  Â  Â  Â  onChange={(e) => setFilter(e.target.value)}
Â  Â  Â  Â  Â  Â  Â  className="px-4 py-2 border border-gray-200 rounded-lg text-sm bg-white text-gray-700 focus:outline-none"
Â  Â  Â  Â  Â  Â  Â  aria-label="Filter by form"
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  <option value="">All forms</option>
Â  Â  Â  Â  Â  Â  Â  <option value="tablet">Tablet</option>
Â  Â  Â  Â  Â  Â  Â  <option value="capsule">Capsule</option>
Â  Â  Â  Â  Â  Â  Â  <option value="syrup">Syrup</option>
Â  Â  Â  Â  Â  Â  Â  <option value="injection">Injection</option>
Â  Â  Â  Â  Â  Â  </select>
Â  Â  Â  Â  Â  Â  <Button
Â  Â  Â  Â  Â  Â  Â  onClick={() => navigate("/medicine-form")}
Â  Â  Â  Â  Â  Â  Â  className="flex items-center gap-2 bg-slate-900 hover:bg-slate-700 text-white shadow-md"
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  <Plus className="w-4 h-4" /> Add Medicine
Â  Â  Â  Â  Â  Â  </Button>
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  </motion.div>


Â  Â  Â  Â  {/* Table */}
Â  Â  Â  Â  <motion.div
Â  Â  Â  Â  Â  initial={{ opacity: 0, y: 30 }}
Â  Â  Â  Â  Â  animate={{ opacity: 1, y: 0 }}
Â  Â  Â  Â  Â  transition={{ duration: 0.5 }}
Â  Â  Â  Â  Â  className="bg-white rounded-xl shadow-lg overflow-hidden border border-gray-100"
Â  Â  Â  Â  >
Â  Â  Â  Â  Â  {loading ? (
Â  Â  Â  Â  Â  Â  <div className="p-12 text-center text-gray-400 animate-pulse text-lg">
Â  Â  Â  Â  Â  Â  Â  Loading medicines...
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  ) : filteredMedicines.length === 0 ? (
Â  Â  Â  Â  Â  Â  <div className="p-12 text-center text-gray-500">
Â  Â  Â  Â  Â  Â  Â  <span className="block text-2xl mb-4">ðŸ©º</span>
Â  Â  Â  Â  Â  Â  Â  <span>No medicines match your search or filter.</span>
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  Â  <Table>
Â  Â  Â  Â  Â  Â  Â  <TableHeader className="bg-gray-100/80">
Â  Â  Â  Â  Â  Â  Â  Â  <TableRow>
Â  Â  Â  Â  Â  Â  Â  Â  Â  <TableCell className="font-semibold text-gray-700">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Name
Â  Â  Â  Â  Â  Â  Â  Â  Â  </TableCell>
Â  Â  Â  Â  Â  Â  Â  Â  Â  <TableCell className="font-semibold text-gray-700">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Form
Â  Â  Â  Â  Â  Â  Â  Â  Â  </TableCell>
Â  Â  Â  Â  Â  Â  Â  Â  Â  <TableCell className="font-semibold text-gray-700">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Dosage
Â  Â  Â  Â  Â  Â  Â  Â  Â  </TableCell>
Â  Â  Â  Â  Â  Â  Â  Â  Â  <TableCell className="font-semibold text-gray-700">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Frequency
Â  Â  Â  Â  Â  Â  Â  Â  Â  </TableCell>
Â  Â  Â  Â  Â  Â  Â  Â  Â  <TableCell className="font-semibold text-gray-700">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Instructions
Â  Â  Â  Â  Â  Â  Â  Â  Â  </TableCell>
Â  Â  Â  Â  Â  Â  Â  Â  Â  <TableCell className="font-semibold text-gray-700 text-center">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Actions
Â  Â  Â  Â  Â  Â  Â  Â  Â  </TableCell>
Â  Â  Â  Â  Â  Â  Â  Â  </TableRow>
Â  Â  Â  Â  Â  Â  Â  </TableHeader>


Â  Â  Â  Â  Â  Â  Â  <TableBody>
Â  Â  Â  Â  Â  Â  Â  Â  {paginatedMedicines.map((med, i) => (
Â  Â  Â  Â  Â  Â  Â  Â  Â  <motion.tr
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  key={med.id}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  initial={{ opacity: 0, y: 10 }}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  animate={{ opacity: 1, y: 0 }}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  transition={{ delay: i * 0.04 }}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="hover:bg-indigo-50/60 transition-colors"
Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <TableCell className="py-2 px-3 text-sm font-medium flex items-center gap-1">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {med.name}{" "}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </TableCell>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <TableCell className="capitalize">{med.form}</TableCell>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <TableCell>{med.dosage}</TableCell>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <TableCell>{med.frequency}</TableCell>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <TableCell>{med.instructions || "-"}</TableCell>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <TableCell className="flex gap-3 justify-center py-2">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Button
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  size="sm"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  variant="outline"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="hover:bg-indigo-50 hover:text-indigo-700 focus:ring-2 focus:ring-indigo-400"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => navigate(`/medicine-form/${med.id}`)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  aria-label="Edit medicine"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  tabIndex={0}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  title="Edit"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Edit className="w-4 h-4" />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </Button>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Button
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  size="sm"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  variant="outline"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="border-red-400 text-red-500 hover:bg-red-50 hover:text-red-600 focus:ring-2 focus:ring-red-300"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => handleDelete(med._id)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  aria-label="Delete medicine"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  tabIndex={0}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  title="Delete"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Trash className="w-4 h-4" />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </Button>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </TableCell>
Â  Â  Â  Â  Â  Â  Â  Â  Â  </motion.tr>
Â  Â  Â  Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  Â  Â  Â  </TableBody>
Â  Â  Â  Â  Â  Â  </Table>
Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  </motion.div>
Â  Â  Â  Â  <div className="flex justify-center mt-6">
Â  Â  Â  Â  Â  <Pagination />
Â  Â  Â  Â  </div>


Â  Â  Â  Â  <div className="flex justify-end gap-4 mt-6">
Â  Â  Â  Â  Â  <Button
Â  Â  Â  Â  Â  Â  className="bg-indigo-100 text-indigo-700 hover:bg-indigo-200"
Â  Â  Â  Â  Â  Â  onClick={() => alert("Export to CSV")}
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Export CSV
Â  Â  Â  Â  Â  </Button>
Â  Â  Â  Â  Â  <Button
Â  Â  Â  Â  Â  Â  className="bg-indigo-100 text-indigo-700 hover:bg-indigo-200"
Â  Â  Â  Â  Â  Â  onClick={() => window.print()}
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Print List
Â  Â  Â  Â  Â  </Button>
Â  Â  Â  Â  </div>
Â  Â  Â  </div>
Â  Â  </div>
Â  );
};


export default MedicineListPage;